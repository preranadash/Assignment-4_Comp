#problem 8
import numpy as np

def monte_carlo_circle(num_samples):
    count_inside = 0
    for _ in range(num_samples):
        x, y = np.random.uniform(-1, 1, 2)
        if x**2 + y**2 <= 1:
            count_inside += 1
    area_estimate = (count_inside / num_samples) * 4  # The area of the bounding box is 4 (2x2)
    return area_estimate

def monte_carlo_sphere_10d(num_samples):
    count_inside = 0
    for _ in range(num_samples):
        point = np.random.uniform(-1, 1, 10)
        if np.sum(point**2) <= 1:
            count_inside += 1
    volume_estimate = (count_inside / num_samples) * 2**10  # The volume of the 10D bounding hypercube is 2^10
    return volume_estimate

# Number of samples
num_samples = 1000000

# Estimate the area of the unit circle
area_circle = monte_carlo_circle(num_samples)
print(f"Estimated area of the unit circle: {area_circle}")

# Estimate the volume of the 10D unit sphere
volume_sphere_10d = monte_carlo_sphere_10d(num_samples)
print(f"Estimated volume of the 10-dimensional unit sphere: {volume_sphere_10d}")
